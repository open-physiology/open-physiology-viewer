{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "$id": "https://github.com/open-physiology/open-physiology-viewer/blob/master/src/model/graphScheme.json",
  "title": "ApiNATOMY model",
  "description": "The ApiNATOMY model schema provides a contract for the JSON-based input data accepted by the ApiNATOMY lyph viewer, a web application that draws schematic models of physiology.",
  "definitions": {
    "Anchor": {
      "description": "Anchor defines a special point in a scaffold. Anchor points can join wires.",
      "allOf": [
        {
          "$ref": "#/definitions/Vertice"
        }
      ],
      "properties": {
        "cardinal": {
          "description": "Indicates whether an anchor is cardinal",
          "type": "boolean"
        },
        "layout": {
          "description": "Provided 2d coordinates for the anchor",
          "$ref": "#/definitions/Point2Scheme"
        },
        "hostedBy": {
          "description": "A wire on which the given anchor is positioned",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Wire"
            }
          ],
          "relatedTo": "hostedAnchors"
        },
        "internalIn": {
          "description": "ID or reference of the region in which this anchor must be positioned",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Region"
            }
          ],
          "relatedTo": "internalAnchors"
        },
        "onBorderInRegion": {
          "description": "IDs or references of the region in which this anchor defines a border point",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Region"
              }
            ]
          },
          "relatedTo": "borderAnchors",
          "readOnly": true
        },
        "sourceOf": {
          "description": "Wires that start in this anchor",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Wire"
              }
            ]
          },
          "relatedTo": "source"
        },
        "targetOf": {
          "description": "Wires that end in this anchor",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Wire"
              }
            ]
          },
          "relatedTo": "target"
        },
        "partOf": {
          "description": "Scaffold that contains the anchor ",
          "$ref": "#/definitions/Scaffold",
          "readOnly": true,
          "relatedTo": "anchors"
        },
        "anchoredNode": {
          "description": "Nodes anchored by the current anchor point",
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ],
            "relatedTo": "anchoredTo"
        }
      }
    },
    "AnnotationSchema": {
      "description": "Metadata for ApiNATOMY model",
      "type": "object",
      "properties": {
        "namespace": {
          "description": "Model namespace",
          "$ref": "#/definitions/IdentifierScheme"
        },
        "schemaVersion": {
          "description": "ApiNATOMY JSON Schema version used for model generation",
          "type": "string",
          "readOnly": true
        },
        "version": {
          "description": "Model version",
          "type": "string",
          "readOnly": true
        },
        "created": {
          "description": "Date of the model creation",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "lastUpdated": {
          "description": "Date of the model last update",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "author": {
          "description": "Name of the model author",
          "type": "string"
        },
        "uuid": {
          "description": "Generated UUID for exported model",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ScaffoldStateSchema": {
      "description": "Selected properties of the scaffold that get serialized in a snapshot model",
      "type": "object",
      "properties": {
        "id": {
          "description": "Scaffold identifier",
          "$ref": "#/definitions/IdentifierScheme"
        },
        "annotation": {
          "description": "Annotation for the saved scaffold, e.g., version, author, etc.",
          "$ref": "#/definitions/AnnotationSchema"
        },
        "anchors": {
          "description": "Scaffold anchor coordinates",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "Anchor identifier",
                "$ref": "#/definitions/IdentifierScheme"
              },
              "layout": {
                "description": "Current anchor coordinates",
                "$ref": "#/definitions/Point2Scheme"
              }
            }
          }
        },
        "visibleComponents": {
          "description": "Identifiers of visible components",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentifierScheme"
          }
        }
      }
    },
    "Border": {
      "description": "Lyph border schematically models the inner and outer surfaces of a body part whose structure is   defined by the lyph. Each border consists of an array that defines two radial and two longitudinal borders. The inner longitudinal border is always parallel to the lyph's rotational axis.",
      "allOf": [
        {
          "$ref": "#/definitions/VisualResource"
        }
      ],
      "properties": {
        "borders": {
          "description": "Lyph or region borders listed in the clockwise order (starting from the inner longitudinal border in lyph). If this property is included to the input model, it must contain as many objects as there are border sides.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Edge"
              }
            ]
          },
          "relatedTo": "onBorder",
          "default": []
        },
        "host": {
          "description": "The ID or reference to the lyph or region object that owns this border. This property is set internally and should not be assigned.",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Shape"
            }
          ],
          "relatedTo": "border",
          "readOnly": true
        }
      }
    },
    "Chain": {
      "description": "Defines a chain of conveying lyphs",
      "allOf": [
        {
          "$ref": "#/definitions/GroupTemplate"
        }
      ],
      "properties": {
        "root": {
          "description": "The source node of the chain (tree root)",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Node"
            }
          ],
          "relatedTo": "rootOf"
        },
        "leaf": {
          "description": "The target node of the chain",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Node"
            }
          ],
          "relatedTo": "leafOf"
        },
        "lyphs": {
          "description": "Ordered set of lyphs to form a chain",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "inChains",
          "default": []
        },
        "lyphTemplate": {
          "description": "Lyph template to generate lyphs conveyed by the omega-tree branches.",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "templateInChains"
        },
        "numLevels": {
          "description": "Number of levels in the generated chain. Nodes and links are auto-created",
          "type": "number",
          "default": 1
        },
        "levels": {
          "description": "Optional references to links or link properties that must be associated with the chain level. Excel property levelTargets can be used to name chain nodes",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ],
            "relatedTo": "levelIn"
          }
        },
        "housingLyphs": {
          "description": "A set of lyphs that house a chain",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "bundlesChains"
        },
        "housingChain": {
          "description": "A chain that houses the chain",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Chain"
            }
          ]
        },
        "housingRange": {
          "description": "Index range to define the chain part that houses the chain",
          "type": "object",
          "properties": {
            "min": {
              "description": "Start index for tree embedding",
              "type": "number",
              "minimum": 0
            },
            "max": {
              "description": "End index for tree embedding",
              "type": "number",
              "minimum": 0
            }
          }
        },
        "housingLayers": {
          "description": "Indices of the layers in housing lyphs to embed the chain levels. The field should be used when the housing lyph layers are generated and not known in advance.",
          "type": "array",
          "items": {
            "type": "number",
            "minimum": 0
          }
        },
        "housingLyphTemplates": {
          "description": "Lyph templates who's layers are going to house the chain",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "providesChains"
        },
        "radial": {
          "description": "A flag to indicate that the chain is hosted in layers of the same lyph (stretched radially). The flag is set automatically",
          "type": "boolean",
          "readOnly": true
        },
        "generatedFrom": {
          "description": "A chain template (a chain with housingLyphTemplates) that was used to generate the current chain",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Chain"
            }
          ],
          "relatedTo": "generatedChains",
          "readOnly": true
        },
        "generatedChains": {
          "description": "Chains derived from the current chain template",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ]
          },
          "relatedTo": "generatedFrom",
          "readOnly": true
        },
        "levelOntologyTerms": {
          "description": "External ontology terms that get associated with generated chain levels",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/OntologyTerm"
              }
            ]
          }
        },
        "wiredTo": {
          "description": "Scaffold wire that defines layout of the chain",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Wire"
            }
          ],
          "relatedTo": "wiredChains"
        },
        "startFromLeaf": {
          "description": "When set to true, it connects chain's root to wire's target and its leaf to the wire's source",
          "type": "boolean"
        },
        "wireStart": {
          "description": "Level index from which the chain starts following the wire in a graphical layout",
          "type": "number",
          "default": 0
        },
        "wireEnd": {
          "description": "Level index the chain ends following the wire in a graphical layout. Negative numbers point to the level index from the chain's end.",
          "type": "number",
          "default": 0
        },
        "hostedBy": {
          "description": "ID or reference of the lyph which this lyph must be projected to",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Shape"
            }
          ]
        },
        "specializations": {
          "description": "Chains created by modification of this chain",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ],
            "relatedTo": "specializationOf"
          }
        },
        "specializationOf": {
          "description": "A chain used as prototype for the generation of this chain",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Chain"
            }
          ],
           "relatedTo": "specializations"
        }
      }
    },
    "Channel": {
      "description": "Defines a chain of lyphs that transport materials",
      "allOf": [
        {
          "$ref": "#/definitions/GroupTemplate"
        }
      ],
      "properties": {
        "materials": {
          "description": "Biological materials, chemical elements and compounds, conveyed by the channel",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Material"
              }
            ]
          },
          "relatedTo": "transportedBy",
          "default": []
        },
        "housingLyphs": {
          "description": "Lyphs that house the channel",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "channels",
          "default": []
        },
        "instances": {
          "description": "Groups (subgraphs) that contain generated channel instances",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          },
          "readOnly": true
        }
      }
    },
    "Coalescence": {
      "description": "Defines a group of lyphs with overlapping layers",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "topology": {
          "type": "string",
          "enum": [
            "CONNECTING",
            "EMBEDDING"
          ],
          "default": "CONNECTING"
        },
        "abstract": {
          "description": "A boolean flag to indicate that this coalescence is defined on abstract lyphs",
          "type": "boolean",
          "readOnly": true
        },
        "generatedFrom": {
          "description": "Coalescence with abstract lyphs or materials which was used to generate the current coalescence",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Coalescence"
            }
          ],
          "readOnly": true
        },
        "lyphs": {
          "description": "Coalescing lyphs, i.e., lyphs with overlapping layers",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "inCoalescences",
          "default": []
        },
        "group": {
          "description": "Group (subgraph) that encompasses coalescence visual resources.",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Group"
            }
          ],
          "readOnly": true
        }
      }
    },
    "InterpolateColorScheme": {
      "description": "Name of the color interpolation scheme as in d3-scale-chromatic",
      "type": "string",
      "enum": [
        "interpolateBrBG",
        "interpolatePRGn",
        "interpolatePiYG",
        "interpolatePuOr",
        "interpolateRdBu",
        "interpolateRdGy",
        "interpolateRdYlBu",
        "interpolateRdYlGn",
        "interpolateSpectral",
        "interpolateBuGn",
        "interpolateBuPu",
        "interpolateGnBu",
        "interpolateOrRd",
        "interpolatePuBuGn",
        "interpolatePuBu",
        "interpolatePuRd",
        "interpolateRdPu",
        "interpolateYlGnBu",
        "interpolateYlGn",
        "interpolateYlOrBr",
        "interpolateYlOrRd",
        "interpolateBlues",
        "interpolateGreens",
        "interpolateGreys",
        "interpolatePurples",
        "interpolateReds",
        "interpolateOranges",
        "interpolateCubehelixDefault",
        "interpolateRainbow",
        "interpolateViridis"
      ]
    },
    "Component": {
      "description": "Scaffold component includes resources to describe graphical layout for connectivity models",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/AnnotationSchema"
        }
      ],
      "properties": {
        "anchors": {
          "description": "Scaffold anchor points",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Anchor"
              }
            ]
          },
          "default": []
        },
        "wires": {
          "description": "Scaffold edges (property-restricted version of links, e.g., scaffold links are not conveyed by lyphs?)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Wire"
              }
            ]
          },
          "default": []
        },
        "regions": {
          "description": "Areas occupied by the models of body organs, systems or surfaces that are not part of the connectivity model. Region can be defined by points or sequence of links (border)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Region"
              }
            ]
          }
        },
        "components": {
          "description": "Nested components",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Component"
              }
            ]
          },
          "default": []
        }
      }
    },
    "CurieMapping": {
      "description": "List of mappings used for external identifiers",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "prefix": {
          "type": "string",
          "pattern": "[A-Za-z_][A-Za-z0-9.-_]"
        },
        "namespace": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "Edge": {
      "description": "A common abstract class for Link and Wire",
      "allOf": [
        {
          "$ref": "#/definitions/VisualResource"
        }
      ],
      "abstract": true,
      "properties": {
        "stroke": {
          "description": "Special edge stroke: dashed or thick",
          "type": "string",
          "enum": [
            "dashed",
            "thick"
          ]
        },
        "lineWidth": {
          "description": "Edge line width, used in combination with `stroke` set to `dashed`",
          "type": "number"
        },
        "arcCenter": {
          "description": "Center of an elliptic curve for an arc edge",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Vertice"
            }
          ]
        },
        "curvature": {
          "description": "Curvature of an arc or spline edge, defined as percentage of length",
          "type": "number"
        },
        "onBorder": {
          "description": "Border that contains this link",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Border"
            }
          ],
          "relatedTo": "borders"
        }
      },
      "dependencies": {
        "lineWidth": [
          "stroke"
        ],
        "arcCenter": [
          "geometry"
        ]
      }
    },
    "External": {
      "description": "Reference to an external resource",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "uri": {
          "description": "Reference to an external resource",
          "type": "string"
        },
        "type": {
          "description": "Resource category, i.e., FMA ontology, etc.",
          "type": "string"
        },
        "externalTo": {
          "description": "Model resources corresponding to the given external resource",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Resource"
              }
            ]
          },
          "relatedTo": "external"
        }
      }
    },
    "OntologyTerm": {
      "description": "Definition of an external term",
      "allOf": [
        {
          "$ref": "#/definitions/External"
        }
      ],
      "properties": {
        "annotates": {
          "description": "Model resources annotated by the given ontology term",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Resource"
              }
            ]
          },
          "relatedTo": "ontologyTerms"
        },
        "cladeInVariances": {
          "description": "Variance specs in which the term defines clade",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/VarianceSpec"
              }
            ]
          },
          "relatedTo": "clades",
          "advanced": "true"
        }
      }
    },
    "Reference": {
      "description": "Reference to a publication",
      "allOf": [
        {
          "$ref": "#/definitions/External"
        }
      ],
      "properties": {
        "documents": {
          "description": "Model resources documented by the given reference",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Resource"
              }
            ]
          },
          "relatedTo": "references"
        },
        "parent": {
          "description": "Reference that contains the given published resource, i.e., a book contains a figure",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Reference"
            }
          ],
          "relatedTo": "children"
        },
        "children": {
          "description": "Reference resources which are part of the given publication, i.e., book chapters or figures",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "relatedTo": "parent"
        }
      }
    },
    "VarianceSpec": {
      "description": "Specification of variance among species",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "clades": {
          "description": "External resources identifying clades",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/OntologyTerm"
              }
            ]
          },
          "relatedTo": "cladeInVariances"
        },
        "phenotypes": {
          "description": "External resources identifying phenotypes",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/OntologyTerm"
              }
            ]
          }
        },
        "includes": {
          "description": "Variance specifications which are parts of the given specification",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/VarianceSpec"
              }
            ]
          }
        },
        "presence": {
          "description": "Ontology term that identifies resource from which the variance present in all descendants unless lost",
          "type": "string",
          "enum": [
            "basal",
            "absent",
            "observed"
          ]
        }
      }
    },
    "Graph": {
      "description": "The ApiNATOMY connectivity model is a complex graph that combines semantic resources and visual annotations. The graph nodes are arranged by the force-directed graph layout that respects constrains on relative positioning of the model elements, specified in the input data by the modeller.",
      "$ref": "#/definitions/Group",
      "properties": {
      }
    },
    "Group": {
      "description": "An ApiNATOMY model consists of an extended graph with nested subgraphs, called also groups, which define the structural composition of human body organs and/or subsystems, with related measurements and annotations.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/AnnotationSchema"
        }
      ],
      "properties": {
        "abbrev": {
          "description": "Short graph identifier for the use in rdfs:labels",
          "$ref": "#/definitions/IdentifierScheme"
        },
        "localConventions": {
          "description": "Mapping from local identifiers to global identifiers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurieMapping"
          }
        },
        "imports": {
          "description": "URLs of published ApiNATOMY models to merge with the current model",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uri"
          }
        },
        "scaleFactor": {
          "description": "Number of pixels per unit of length, set in a generated model",
          "type": "number",
          "readOnly": true
        },
        "variance": {
          "description": "Variance for which model was generated",
          "$ref": "#/definitions/VarianceSpec"
        },
        "inactive": {
          "description": "A boolean flag to indicate that this group should not appear in the view panel",
          "type": "boolean"
        },
        "hidden": {
          "description": "A property that indicates whether this group is hidden",
          "type": "boolean",
          "default": true
        },
        "seed": {
          "description": "A lyph that belongs to the group and serves as a starting point to populate the group",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "seedIn"
        },
        "hostedBy": {
          "description": "ID or reference of a region on which lyphs from the group must be projected to",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Region"
            }
          ],
          "relatedTo": "hostedGroup"
        },
        "generatedFrom": {
          "description": "Group template which was used to generate the current lyph",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/GroupTemplate"
            }
          ],
          "readOnly": true
        },
        "nodes": {
          "description": "Nodes connect separate links into semantically meaningful groups that reflect the organizational composition of body parts and/or flow in physiological processes.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          },
          "default": []
        },
        "links": {
          "description": "Links schematically represent structural elements of the human physiology relevant to the explanation of a certain physiological process: blood vessels, neural connections, pulmonary vessels, etc.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "default": []
        },
        "lyphs": {
          "description": "Lyphs provide schematic explanation of physiology structures, i.e., tissue layers that constitute a certain organ. By rotating the lyph shape around its axis, we can create a tube (open, semi-closed or closed on both sides) that structurally resembles a meaningful physiological element, i.e., a blood vessel or a neural cell.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "default": []
        },
        "materials": {
          "description": "Biological materials, chemical elements and compounds, used in the model",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Material"
              }
            ]
          }
        },
        "coalescences": {
          "description": "Coalescences, i.e., groups of overlapping lyphs",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Coalescence"
              }
            ]
          },
          "default": []
        },
        "channels": {
          "description": "Templates that define channel patterns. Channel templates are used to automatically generate groups (subgraphs) representing process chains within layers.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Channel"
              }
            ]
          }
        },
        "chains": {
          "description": "Templates that define chain patterns. Chain templates are used to automatically generate groups (subgraphs) representing process chains.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ]
          }
        },
        "trees": {
          "description": "Templates that define arborization patterns within anatomy models. Tree templates are used to automatically generate groups (subgraphs).",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Tree"
              }
            ]
          }
        },
        "groups": {
          "description": "Semantically meaningful groups of resources that share common properties and are manipulated as a group, e.g., hidden or shown in the viewer.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Group"
              }
            ]
          }
        },
        "scaffolds": {
          "description": "Layout scaffolds that define connectivity graph layout",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Scaffold"
          }
        },
        "varianceSpecs": {
          "description": "Specifications of variance among species",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VarianceSpec"
          }
        }
      }
    },
    "EdgeGeometryScheme": {
      "type": "string",
      "enum": [
        "link",
        "arc",
        "spline",
        "invisible",
        "semicircle",
        "rectangle"
      ],
      "default": "link"
    },
    "GroupColorScheme": {
      "description": "Scheme to specify color interpolation for a group of resources",
      "type": "object",
      "properties": {
        "scheme": {
          "description": "Interpolation scheme to apply to a group of resources",
          "$ref": "#/definitions/InterpolateColorScheme"
        },
        "length": {
          "description": "Number of distinct colors from the color scheme",
          "type": "number",
          "minimum": 1
        },
        "reversed": {
          "description": "Boolean parameter that indicates whether to pick up colors from the color scheme in reverse order",
          "type": "boolean"
        },
        "offset": {
          "description": "Colors at the beginning and at the end of the color arrays may be too dark or too light, so we skip some percentage",
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      }
    },
    "GroupTemplate": {
      "description": "An abstract resource that defines common properties for all types of generated subgraphs",
      "abstract": "true",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "hidden": {
          "description": "A flag to indicate that group generated from this template will be hidden by default.",
          "type": "boolean",
          "default": true
        },
        "group": {
          "description": "Group (subgraph) that encompasses generated group resources.",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Group"
            }
          ],
          "readOnly": true,
          "relatedTo": "generatedFrom"
        },
        "groupId": {
          "description": "Desired identifier for a group generated from the given group template.",
          "$ref": "#/definitions/IdentifierScheme"
        },
        "length": {
          "description": "The total length of the maximal path in the group, used to compute the default length of generated subgraph links",
          "type": "number"
        },
        "fixed": {
          "description": "A flag that excludes the path length from rescaling (currently not respected by the viewer)",
          "type": "boolean"
        },
        "conveyingType": {
          "description": "Process type associated with links in the group derived from the template",
          "$ref": "#/definitions/ProcessTypeScheme"
        }
      }
    },
    "IdentifierScheme": {
      "description": "Resource reference: optional namespace with identifier",
      "type": "string",
      "pattern": "^[a-zA-Z0-9:_./@?#&\\-=']{1,200}$"
    },
    "JSONPathScheme": {
      "description": "JSONPath query to select resources",
      "type": "string"
    },
    "Link": {
      "description": "Graph link schematically representing a (part of) physiological process.",
      "allOf": [
        {
          "$ref": "#/definitions/Edge"
        }
      ],
      "properties": {
        "source": {
          "description": "Source node of the link",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Node"
            }
          ],
          "relatedTo": "sourceOf"
        },
        "target": {
          "description": "Target node of the link",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Node"
            }
          ],
          "relatedTo": "targetOf"
        },
        "length": {
          "description": "The length of the edge (for links can be set, for wires usually computed)",
          "type": "number",
          "minimum": 0
        },
        "hostedNodes": {
          "description": "Nodes that are positioned on a link or border edge. If the same node is positioned on several edges, it is cloned and all its clones are connected by auto-generated collapsible dashed links with the original node.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          },
          "relatedTo": "hostedBy",
          "uniqueItems": true
        },
        "conveyingLyph": {
          "description": "Conveying lyph for the process represented by the link (other side of 'axis')",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "conveys"
        },
        "conveyingType": {
          "description": "Process type",
          "$ref": "#/definitions/ProcessTypeScheme"
        },
        "conveyingMaterials": {
          "description": "Materials conveyed by a diffusive process, must be subset of materials in the innermost layer of the conveying lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Material"
              }
            ]
          }
        },
        "levelIn": {
          "description": "A chain that contains the link",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ]
          },
          "relatedTo": "levels",
          "readOnly": true
        },
        "endsIn": {
          "description": "A lyph which contains one of the chain link ends",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "endBundles",
          "readOnly": true
        },
        "fasciculatesIn": {
          "description": "A lyph which bundles the link",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "bundles",
          "readOnly": true
        },
        "collapsible": {
          "description": "Indicates that the link disappears when its end nodes are not both constrained",
          "type": "boolean",
          "readOnly": true
        },
        "geometry": {
          "description": "Defines the geometry and  behavior of the link in the model graph: `link` corresponds to a straight line, `semicircle` defines a line that looks like a semicircle, `rectangle` represents a rectangular line with rounded corners, `arc` represents a curve in the shape of an elliptic arc with given center, `path` is a solid path with control points defined by the edge bundling algorithm, `spline` is a link that uses preceding and following nodes on a path to smoothly connect existing links, `invisible` link is a link with a hidden visual object affected by graph forces that helps to position inner lyph content.",
          "anyOf": [
            {
              "$ref": "#/definitions/EdgeGeometryScheme"
            },
            {
              "type": "string",
              "enum": [
                "path"
              ]
            }
          ],
          "default": "link"
        },
        "infoFields": {
          "description": "Resource properties shown in the info panel when the resource is active, i.e., highlighted or selected",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "id",
            "namespace",
            "name",
            "class",
            "source",
            "target",
            "conveyingLyph",
            "fasciculatesIn",
            "endsIn"
          ]
        },
        "directed": {
          "description": "When set to true, defines a directed edge with arrow at the end",
          "type": "boolean",
          "default": false
        },
        "reversed": {
          "description": "When set to true, used to turn the link's conveying lyph by 180 degrees",
          "type": "boolean"
        },
        "strength": {
          "description": "Link's strength reflects how strongly the link tries to satisfy its length constraint in the force-directed layout",
          "type": "number"
        },
        "prev": {
          "description": "References to preceding links in ordered chains that pass through the current link",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "relatedTo": "next",
          "readOnly": true
        },
        "next": {
          "description": "References to following links in ordered chains that pass through the current link",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "relatedTo": "prev",
          "readOnly": true
        },
        "prevChainEndLevels": {
          "description": "References to end levels of chains preceding the chains in which the current link is a level.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "relatedTo": "nextChainStartLevels",
          "readOnly": true
        },
        "nextChainStartLevels": {
          "description": "References to start levels of chains following the chain in which the current link is a level.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "relatedTo": "prevChainEndLevels",
          "readOnly": true
        }
      }
    },
    "Lyph": {
      "description": "Data structure that defines the material composition and topology of body parts and physiological processes",
      "allOf": [
        {
          "$ref": "#/definitions/Shape"
        },
        {
          "$ref": "#/definitions/Material"
        }
      ],
      "properties": {
        "topology": {
          "description": "Lyph topology defines its border shape",
          "type": "string",
          "enum": [
            "TUBE",
            "BAG-",
            "BAG+",
            "BAG",
            "BAG2",
            "CYST"
          ]
        },
        "isTemplate": {
          "description": "Indicates that the lyph defines layers for its subtypes",
          "type": "boolean"
        },
        "thickness": {
          "description": "Anatomical lyph thickness defined in the form of power of 1/10",
          "type": "object",
          "properties": {
            "min": {
              "description": "Minimal value",
              "type": "number"
            },
            "max": {
              "description": "Maximal value",
              "type": "number"
            }
          }
        },
        "length": {
          "description": "Anatomical lyph length defined in the form of power of 1/10",
          "type": "object",
          "properties": {
            "min": {
              "description": "Minimal value",
              "type": "number"
            },
            "max": {
              "description": "Maximal value",
              "type": "number"
            }
          }
        },
        "subtypes": {
          "description": "Lyphs that are anatomical subtypes of the given lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "supertype"
        },
        "supertype": {
          "description": "Lyph which is an anatomical supertype of the given lyph",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "subtypes"
        },
        "inheritedExternal": {
          "description": "Identifiers of external resources inherited from all ancestors (supertypes)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/External"
              }
            ]
          },
          "readOnly": true
        },
        "inheritedOntologyTerms": {
          "description": "Identifiers of ontology terms inherited from all ancestors (supertypes)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/OntologyTerm"
              }
            ]
          },
          "readOnly": true
        },
        "inheritedReferences": {
          "description": "Identifiers of references inherited from all ancestors (supertypes)",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "readOnly": true
        },
        "conveys": {
          "description": "A link conveying the lyph",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Link"
            }
          ],
          "relatedTo": "conveyingLyph"
        },
        "layers": {
          "description": "Lyph layers",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "layerIn"
        },
        "layerIn": {
          "description": "A lyph in which the current lyph is hosted as layer",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "layers",
          "readOnly": true
        },
        "templateInChains": {
          "description": "Chains in which the current lyph is a lyph template",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ]
          },
          "relatedTo": "lyphTemplate",
          "readOnly": true
        },
        "internalIn": {
          "description": "ID or reference of the lyph that contains the given lyph as its part",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "internalLyphs"
        },
        "internalInLayer": {
          "description": "Layer number of the lyph that contains the given lyph as its part",
          "type": "number",
          "minimum": 0
        },
        "internalLyphs": {
          "description": "Lyphs that are internal parts of the given lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "internalIn"
        },
        "internalNodes": {
          "description": "Nodes that should be positioned on the given region",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          },
          "relatedTo": "internalIn",
          "uniqueItems": true
        },
        "internalLyphColumns": {
          "description": "Defines number of columns in the grid layout for the internal lyphs",
          "type": "number",
          "default": 1
        },
        "internalLyphsInLayers": {
          "description": "Indices of layers to position internal lyphs. The field should be used when layers are generated and not known in advance",
          "type": "array",
          "items": {
            "type": "number",
            "minimum": 0
          }
        },
        "internalNodesInLayers": {
          "description": "Indices of layers to position internal nodes. The field should be used when layers are generated and not known in advance",
          "type": "array",
          "items": {
            "type": "number",
            "minimum": 0
          }
        },
        "hostedBy": {
          "description": "ID or reference of the region which this lyph must be projected to",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Region"
            }
          ],
          "relatedTo": "hostedLyphs"
        },
        "channels": {
          "description": "ID or reference of the channel which this lyph houses",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Channel"
              }
            ]
          },
          "relatedTo": "housingLyphs",
          "uniqueItems": true
        },
        "endBundles": {
          "description": "A set of links (i.e., neural connections) that pass through the lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "relatedTo": "endsIn",
          "readOnly": true
        },
        "bundles": {
          "description": "A set of links (i.e., neural connections) that pass through the lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "relatedTo": "fasciculatesIn",
          "readOnly": true
        },
        "bundlesChains": {
          "description": "Chains that generate links that pass through the lyph. The property can be used to override default bundling of tree links to the outermost layer of a lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ]
          },
          "relatedTo": "housingLyphs"
        },
        "providesChains": {
          "description": "Chains houses by the abstract layers of the given lyph template",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ]
          },
          "relatedTo": "housingLyphTemplates",
          "readOnly": true
        },
        "housingLyph": {
          "description": "A derived property that links a lyph with it's housing lyph",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "readOnly": true
        },
        "seedIn": {
          "description": "Dynamic group in which the given lyph is a seed",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Group"
            }
          ],
          "relatedTo": "seed"
        },
        "villus": {
          "description": "Small, finger-like projections that extend into the lumen",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Villus"
            }
          ],
          "relatedTo": "villusOf"
        },
        "inCoalescences": {
          "description": "A set of coalescences that include the current lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Coalescence"
              }
            ]
          },
          "relatedTo": "lyphs"
        },
        "inChains": {
          "description": "Shows chains in which the given lyph is used as level",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ]
          },
          "relatedTo": "lyphs"
        },
        "generatedFrom": {
          "description": "Material which was used to generate the current lyph",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Material"
            }
          ],
          "readOnly": true
        },
        "angle": {
          "description": "Angle (in degrees) to rotate the lyph around its axis",
          "type": "number",
          "minimum": 0,
          "maximum": 360
        },
        "infoFields": {
          "description": "Resource properties shown in the info panel when the resource is active, i.e., highlighted or selected",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "id",
            "namespace",
            "name",
            "class",
            "topology",
            "external",
            "conveys",
            "internalIn",
            "bundles",
            "supertype"
          ]
        },
        "width": {
          "description": "Width of the visual object representing lyph. When set manually, should not exceed 100 (% of graph layout width)",
          "type": "number",
          "minimum": 0
        },
        "height": {
          "description": "Height of the visual object representing lyph. When set manually, should not exceed 100 (% of graph layout length)",
          "type": "number",
          "minimum": 0
        },
        "scale": {
          "description": "Defines the size of the conveying lyph as percentage of its axis' length",
          "type": "object",
          "properties": {
            "width": {
              "type": "number",
              "minimum": 0
            },
            "height": {
              "type": "number",
              "minimum": 0
            }
          }
        },
        "create3d": {
          "description": "Create 3d visual objects for this lyph",
          "type": "boolean"
        },
        "layerWidth": {
          "description": "Defines the percentage of the hosting lyph's width occupied by the given lyph as layer",
          "type": "number",
          "minimum": 0
        }
      }
    },
    "Material": {
      "description": "Biological materials, chemical elements and compounds",
      "allOf": [
        {
          "$ref": "#/definitions/VisualResource"
        }
      ],
      "properties": {
        "materials": {
          "description": "Materials as constituent part of the current material",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Material"
              }
            ]
          },
          "relatedTo": "inMaterials"
        },
        "inMaterials": {
          "description": "Materials which contain the current material",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Material"
              }
            ]
          },
          "relatedTo": "materials"
        },
        "transportedBy": {
          "description": "Channels that transfer the current material",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Channel"
              }
            ]
          },
          "relatedTo": "materials"
        }
      }
    },
    "Node": {
      "description": "Graph node joins two or more links (processes)",
      "allOf": [
        {
          "$ref": "#/definitions/Vertice"
        }
      ],
      "properties": {
        "infoFields": {
          "description": "Properties shown in the info panel when the resource is active, i.e., highlighted or selected",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "id",
            "namespace",
            "name",
            "class",
            "sourceOf",
            "targetOf",
            "rootOf",
            "leafOf",
            "internalIn",
            "cloneOf"
          ]
        },
        "hostedBy": {
          "description": "A link on which the given node is positioned (other side of 'hostedNodes').",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Link"
            }
          ],
          "relatedTo": "hostedNodes"
        },
        "internalIn": {
          "description": "ID or reference of the lyph which this lyph must be projected to",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ],
          "relatedTo": "internalNodes"
        },
        "internalInLayer": {
          "description": "Layer number of the lyph that the given done must be projected to",
          "type": "number",
          "minimum": 0
        },
        "controlNodes": {
          "description": "A set of nodes that define the position of the current node as their center of mass",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Node"
              }
            ]
          }
        },
        "layout": {
          "description": "Positioning constraints, i.e., foci points that attract this node in the force-directed layout",
          "$ref": "#/definitions/Point3Scheme",
          "default": {}
        },
        "fixed": {
          "description": "Fixed nodes are positioned to the desired location",
          "type": "boolean"
        },
        "charge": {
          "description": "Defines the force with which this node attracts or repels other nodes in the force-directed graph.",
          "type": "number",
          "default": 0
        },
        "collide": {
          "description": "Defines the radius for the collision force in the force-directed layout. The collision force treats nodes as circles with a given radius, rather than points, and prevents nodes from overlapping.",
          "type": "number",
          "default": 5
        },
        "sourceOf": {
          "description": "Links that start in this node",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "relatedTo": "source"
        },
        "targetOf": {
          "description": "Links that end in this node",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Link"
              }
            ]
          },
          "relatedTo": "target"
        },
        "rootOf": {
          "description": "The chain that starts in this node",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ]
          },
          "relatedTo": "root"
        },
        "leafOf": {
          "description": "The chain that ends in this node",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ]
          },
          "relatedTo": "leaf"
        },
        "anchoredTo": {
          "description": "Scaffold anchor that defines node position",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Anchor"
            }
          ],
          "relatedTo": "anchoredNode"
        },
        "representsCoalescence": {
          "description": "This node represents a coalescence",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Coalescence"
            }
          ],
          "readOnly": true
        }
      }
    },
    "OffsetScheme": {
      "description": "Offset scheme defines the start and the end values as well as a step for incremental selection of values in an array",
      "type": "object",
      "properties": {
        "start": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 1
        },
        "end": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "maximum": 1
        },
        "step": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      }
    },
    "Point2Scheme": {
      "description": "Coordinates of a 2d point",
      "type": "object",
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      }
    },
    "Point3Scheme": {
      "description": "Coordinates of a 3d point",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Point2Scheme"
        }
      ],
      "properties": {
        "z": {
          "type": "number"
        }
      }
    },
    "ProcessTypeScheme": {
      "description": "Process types",
      "type": "string",
      "enum": [
        "ADVECTIVE",
        "DIFFUSIVE"
      ]
    },
    "NamedColorScheme": {
      "type": "string",
      "enum": [
        "aliceblue",
        "antiquewhite",
        "aqua",
        "aquamarine",
        "azure",
        "beige",
        "bisque",
        "black",
        "blanchedalmond",
        "blue",
        "blueviolet",
        "brown",
        "burlywood",
        "cadetblue",
        "chartreuse",
        "chocolate",
        "coral",
        "cornflowerblue",
        "cornsilk",
        "crimson",
        "cyan",
        "darkblue",
        "darkcyan",
        "darkgoldenrod",
        "darkgray",
        "darkgreen",
        "darkgrey",
        "darkkhaki",
        "darkmagenta",
        "darkolivegreen",
        "darkorange",
        "darkorchid",
        "darkred",
        "darksalmon",
        "darkseagreen",
        "darkslateblue",
        "darkslategray",
        "darkslategrey",
        "darkturquoise",
        "darkviolet",
        "deeppink",
        "deepskyblue",
        "dimgray",
        "dimgrey",
        "dodgerblue",
        "firebrick",
        "floralwhite",
        "forestgreen",
        "fuchsia",
        "gainsboro",
        "ghostwhite",
        "goldenrod",
        "gold",
        "gray",
        "green",
        "greenyellow",
        "grey",
        "honeydew",
        "hotpink",
        "indianred",
        "indigo",
        "ivory",
        "khaki",
        "lavenderblush",
        "lavender",
        "lawngreen",
        "lemonchiffon",
        "lightblue",
        "lightcoral",
        "lightcyan",
        "lightgoldenrodyellow",
        "lightgray",
        "lightgreen",
        "lightgrey",
        "lightpink",
        "lightsalmon",
        "lightseagreen",
        "lightskyblue",
        "lightslategray",
        "lightslategrey",
        "lightsteelblue",
        "lightyellow",
        "lime",
        "limegreen",
        "linen",
        "magenta",
        "maroon",
        "mediumaquamarine",
        "mediumblue",
        "mediumorchid",
        "mediumpurple",
        "mediumseagreen",
        "mediumslateblue",
        "mediumspringgreen",
        "mediumturquoise",
        "mediumvioletred",
        "midnightblue",
        "mintcream",
        "mistyrose",
        "moccasin",
        "navajowhite",
        "navy",
        "oldlace",
        "olive",
        "olivedrab",
        "orange",
        "orangered",
        "orchid",
        "palegoldenrod",
        "palegreen",
        "paleturquoise",
        "palevioletred",
        "papayawhip",
        "peachpuff",
        "peru",
        "pink",
        "plum",
        "powderblue",
        "purple",
        "rebeccapurple",
        "red",
        "rosybrown",
        "royalblue",
        "saddlebrown",
        "salmon",
        "sandybrown",
        "seagreen",
        "seashell",
        "sienna",
        "silver",
        "skyblue",
        "slateblue",
        "slategray",
        "slategrey",
        "snow",
        "springgreen",
        "steelblue",
        "tan",
        "teal",
        "thistle",
        "tomato",
        "turquoise",
        "violet",
        "wheat",
        "white",
        "whitesmoke",
        "yellow",
        "yellowgreen"
      ]
    },
    "RGBColorScheme": {
      "type": "string",
      "pattern": "#([a-fA-F0-9]{6}|[a-fA-F0-9]{3}){1,2}|(rgb|hsl)a\\((\\d{1,3}%?,\\s?){3}(1|0?\\.\\d+)\\)|(rgb|hsl)\\(\\d{1,3}%?(,\\s?\\d{1,3}%?){2}\\)"
    },
    "Region": {
      "description": "Area occupied by bordy part of subsystem",
      "allOf": [
        {
          "$ref": "#/definitions/Shape"
        }
      ],
      "properties": {
        "facets": {
          "description": "A set of wires that define boundaries of the region. Shape points and boundaries can be generated from facets to visualize regions",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Wire"
              }
            ]
          },
          "relatedTo": "facetIn",
          "uniqueItems": true
        },
        "borderAnchors": {
          "description": "Border anchors of the region",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Anchor"
              }
            ]
          },
          "relatedTo": "onBorderInRegion",
          "uniqueItems": true
        },
        "internalAnchors": {
          "description": "Internal anchors in the region",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Anchor"
              }
            ]
          },
          "relatedTo": "internalIn",
          "uniqueItems": true
        },
        "hostedGroup": {
          "description": "Resource group hosted by the region",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Group"
            },
            {
              "$ref": "#/definitions/Chain"
            }
          ],
          "relatedTo": "hostedBy"
        },
        "hostedLyphs": {
          "description": "Lyphs that should be projected to a given lyph",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Lyph"
              }
            ]
          },
          "relatedTo": "hostedBy"
        },
        "internalIn": {
          "description": "ID or reference of the region that contains the current region as its part",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Region"
            }
          ],
          "relatedTo": "internalRegions"
        },
        "internalRegions": {
          "description": "Regions that are internal parts of the given region",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Region"
              }
            ]
          },
          "relatedTo": "internalIn"
        },
        "depth": {
          "description": "Can be used to order flat shapes on the same plane (polygonOffsetFactor, currently only applies to regions)",
          "type": "number"
        }
      }
    },
    "Resource": {
      "description": "An abstract resource that defines common properties for all types of concepts in the ApiNATOMY model",
      "type": "object",
      "abstract": "true",
      "properties": {
        "id": {
          "description": "Unique resource identifier",
          "$ref": "#/definitions/IdentifierScheme"
        },
        "fullID": {
          "description": "Unique resource identifier with namespace",
          "$ref": "#/definitions/IdentifierScheme",
          "readOnly": true
        },
        "namespace": {
          "description": "Resource namespace",
          "$ref": "#/definitions/IdentifierScheme",
          "readOnly": true
        },
        "name": {
          "description": "Resource name",
          "type": "string"
        },
        "class": {
          "description": "Resource class",
          "type": "string",
          "readOnly": true
        },
        "description": {
          "description": "Resource description, comments, modeling assumptions, etc.",
          "type": "string"
        },
        "generated": {
          "description": "A boolean flag to mark automatically generated resources",
          "type": "boolean",
          "readOnly": true
        },
        "imported": {
          "description": "A property that indicates whether this group is imported",
          "type": "boolean"
        },
        "assign": {
          "description": "Dynamically assign properties to selected resources",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {
                "description": "JSONPath query to select resources",
                "$ref": "#/definitions/JSONPathScheme"
              },
              "value": {
                "description": "A set of fields to be assigned to all resources that match the query in the path",
                "type": "object"
              }
            }
          }
        },
        "interpolate": {
          "description": "Dynamically apply property interpolation schemes to selected resources",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {
                "description": "JSONPath query to select resources",
                "$ref": "#/definitions/JSONPathScheme"
              },
              "color": {
                "description": "Color interpolation schema for a group of resources",
                "$ref": "#/definitions/GroupColorScheme"
              },
              "offset": {
                "description": "Interpolation scheme to gradually set offsets for a set of resources",
                "$ref": "#/definitions/OffsetScheme"
              }
            }
          }
        },
        "infoFields": {
          "description": "Properties shown in the info panel when the resource is active, i.e., highlighted or selected",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "id",
            "namespace",
            "name",
            "class"
          ]
        },
        "external": {
          "description": "Identifier of a resource in an external ontology (i.e., ID of an FMA term) ",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/External"
              }
            ]
          },
          "relatedTo": "externalTo"
        },
        "references": {
          "description": "Identifier of an evidence source in an external library",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Reference"
              }
            ]
          },
          "relatedTo": "documents"
        },
        "ontologyTerms": {
          "description": "External ontology term",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/OntologyTerm"
              }
            ]
          },
          "relatedTo": "annotates"
        },
        "varianceSpecs": {
          "description": "Variance specifications associated with the resource",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/VarianceSpec"
              }
            ]
          }
        }
      }
    },
    "Scaffold": {
      "description": "The ApiNATOMY scaffold model is an auxiliary structure that defines an abstract layout for a connectivity model. ",
      "$ref": "#/definitions/Component",
      "properties": {
        "localConventions": {
          "description": "Mapping from local identifiers to global identifiers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurieMapping"
          }
        },
        "scaleFactor": {
          "description": "Number of pixels per unit of length, set in a generated model",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "Shape": {
      "description": "A resource that occupies space within a border",
      "allOf": [
        {
          "$ref": "#/definitions/VisualResource"
        }
      ],
      "abstract": true,
      "properties": {
        "border": {
          "description": "Structure of the shape's border",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Border"
            }
          ],
          "relatedTo": "host",
          "default": {}
        },
        "points": {
          "description": "Points defining the border shape",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Point2Scheme"
          },
          "readOnly": true
        }
      }
    },
    "Tree": {
      "description": "Templates that define arborization patterns within anatomy models. Tree templates are used to automatically generate groups (subgraphs).",
      "allOf": [
        {
          "$ref": "#/definitions/GroupTemplate"
        }
      ],
      "properties": {
        "chain": {
          "description": "A chain resource defining the structural composition of the tree, i.e., lyphs that convey tree levels",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Chain"
            }
          ]
        },
        "branchingFactors": {
          "description": "Branching factors define a mean value of branches at each tree level",
          "type": "array",
          "items": {
            "type": "number",
            "default": 1
          }
        },
        "instances": {
          "description": "Groups (subgraphs) that contain generated tree instances",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          },
          "readOnly": true
        },
        "numInstances": {
          "description": "Indicates how many tree instances to create",
          "type": "number",
          "default": 1
        }
      }
    },
    "Vertice": {
      "description": "A common abstract class for nodes and anchors",
      "allOf": [
        {
          "$ref": "#/definitions/VisualResource"
        }
      ],
      "abstract": true,
      "properties": {
        "invisible": {
          "description": "A flag to indicate that this node should not be visualized (view object is not created)",
          "type": "boolean",
          "advanced": false
        },
        "val": {
          "description": "A value that defines the size of the vertice",
          "type": "number",
          "minimum": 0
        },
        "offset": {
          "description": "Defines position of the vertice on its host edge, i.e, fraction of the edge's length starting from the source vertice.",
          "type": "number",
          "minimum": -1,
          "maximum": 1
        }
      }
    },
    "Villus": {
      "description": "Defines a group of resources forming an intestinal villus",
      "allOf": [
        {
          "$ref": "#/definitions/GroupTemplate"
        }
      ],
      "properties": {
        "numLayers": {
          "description": "Number of layers in the villus, or, equivalently, a layer index from which a villus starts",
          "type": "number",
          "default": 1
        },
        "numLevels": {
          "description": "Number of recursive micro-villi levels",
          "type": "number",
          "default": 1
        },
        "villusOf": {
          "description": "Hosting lyph for the villus",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Lyph"
            }
          ]
        }
      }
    },
    "VisualResource": {
      "description": "An abstract visual resource that defines common properties for all types of visual resources in the ApiNATOMY model.",
      "abstract": "true",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "properties": {
        "color": {
          "description": "Color",
          "anyOf": [
            {
              "$ref": "#/definitions/RGBColorScheme"
            },
            {
              "$ref": "#/definitions/NamedColorScheme"
            }
          ]
        },
        "viewObjects": {
          "description": "Graphical objects that represent the resource",
          "type": "object",
          "readOnly": true,
          "default": {}
        },
        "labels": {
          "description": "Graphical objects that represent resource labels",
          "type": "object",
          "readOnly": true,
          "default": {}
        },
        "hidden": {
          "description": "A flag to indicate that this resource should not be visualized",
          "type": "boolean"
        },
        "inactive": {
          "description": "A boolean flag to indicate that this visual resource should not be highlighted",
          "type": "boolean"
        },
        "skipLabel": {
          "description": "A flag to indicate that this resource is visualized without the corresponding text label",
          "type": "boolean"
        },
        "cloneOf": {
          "description": "A resource that was copied to create the current resource. This field is used to link resource clones to the original resource. We clone nodes that are hosted by more than one lyph border, and nodes, links and lyphs to generate an instance of an omega tree.",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/VisualResource"
            }
          ],
          "relatedTo": "clones",
          "readOnly": true
        },
        "clones": {
          "description": "Resources that are clones of the current resource. This field is used to link the resource to all its clones. We clone nodes that are hosted by more than one lyph border,  and nodes, links and lyphs to generate an instance of an omega tree.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/VisualResource"
              }
            ]
          },
          "relatedTo": "cloneOf",
          "readOnly": true
        },
        "inGroups": {
          "description": "Groups to which this visual resource is included to",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/VisualResource"
              }
            ]
          },
          "readOnly": true
        }
      }
    },
    "Wire": {
      "description": "Wire models a curve in a scaffold",
      "allOf": [
        {
          "$ref": "#/definitions/Edge"
        }
      ],
      "properties": {
        "geometry": {
          "description": "Defines the geometry of the wire.",
          "anyOf": [
            {
              "$ref": "#/definitions/EdgeGeometryScheme"
            },
            {
              "type": "string",
              "enum": [
                "ellipse"
              ]
            }
          ],
          "default": "link"
        },
        "source": {
          "description": "Start of the wire",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Anchor"
            }
          ],
          "relatedTo": "sourceOf"
        },
        "target": {
          "description": "End of the wire",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Anchor"
            }
          ],
          "relatedTo": "targetOf"
        },
        "radius": {
          "description": "Provides parameters a and b for elliptic wire",
          "$ref": "#/definitions/Point2Scheme"
        },
        "infoFields": {
          "description": "Resource properties shown in the info panel when the resource is active, i.e., highlighted or selected",
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "id",
            "name",
            "class",
            "source",
            "target",
            "wiredChains"
          ]
        },
        "hostedAnchors": {
          "description": "Anchors that are positioned on a wire.",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Anchor"
              }
            ]
          },
          "relatedTo": "hostedBy",
          "uniqueItems": true
        },
        "controlPoint": {
          "description": "Control point for the spline wire",
          "anyOf": [
            {
              "$ref": "#/definitions/IdentifierScheme"
            },
            {
              "$ref": "#/definitions/Anchor"
            }
          ]
        },
        "facetIn": {
          "description": "ID or reference of the region on which this wire is a facet",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Region"
              }
            ]
          },
          "relatedTo": "facets",
          "readOnly": true
        },
        "partOf": {
          "description": "Scaffold that contains the wire",
          "$ref": "#/definitions/Scaffold",
          "readOnly": true,
          "relatedTo": "wires"
        },
        "wiredChains": {
          "description": "Chains constrained by the wire",
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/IdentifierScheme"
              },
              {
                "$ref": "#/definitions/Chain"
              }
            ]
          },
          "relatedTo": "wiredTo"
        }
      },
      "dependencies": {
        "controlPoint": [
          "geometry"
        ]
      }
    },
    "State": {
      "description": "Saves visual state of a connectivity model and associated scaffolds",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/ScaffoldStateSchema"
        }
      ],
      "properties": {
        "scaffolds": {
          "description": "Scaffold properties to preserve (in practice, we save only relevant identifiers and anchor layout coordinates)",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScaffoldStateSchema"
          }
        },
        "visibleGroups": {
          "description": "Identifiers of visible groups",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdentifierScheme"
          }
        },
        "camera": {
          "description": "Current setting of the scene camera",
          "type": "object",
          "properties": {
            "position": {
              "description": "Camera position",
              "$ref": "#/definitions/Point3Scheme"
            },
            "up": {
              "description": "Camera lookup point",
              "$ref": "#/definitions/Point3Scheme"
            }
          }
        },
        "layout": {
          "description": "ApiNATOMY viewer layout  parameters",
          "type": "object",
          "properties": {
            "showLyphs": {
              "description": "Show lyphs",
              "type": "boolean",
              "default": true
            },
            "showLayers": {
              "description": "Show layers",
              "type": "boolean",
              "default": true
            },
            "showLyphs3d": {
              "description": "Show 3d lyphs (if created, see property 'create3d')",
              "type": "boolean",
              "default": true
            },
            "showCoalescences": {
              "description": "render graph with coalescence constraints",
              "type": "boolean",
              "default": true
            },
            "numDimensions": {
              "description": "Number of dimensions for graph layout: 2 vs 3",
              "type": "integer",
              "minimum": 2,
              "maximum": 3,
              "default": 3
            }
          }
        },
        "showLabels": {
          "description": "Visibility of labels for resource classes",
          "type": "object"
        },
        "labelContent": {
          "description": "Label types (id vs name) for resource classes",
          "type": "object"
        }
      }
    },
    "Snapshot": {
      "description": "Saves visual state of a connectivity model and associated scaffolds",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        },
        {
          "$ref": "#/definitions/AnnotationSchema"
        }
      ],
      "properties": {
        "model": {
          "description": "An identifier of the saved model",
          "$ref": "#/definitions/IdentifierScheme"
        },
        "annotation": {
          "description": "Annotation for the saved model, e.g., version, author, etc.",
          "$ref": "#/definitions/AnnotationSchema"
        },
        "states": {
          "description": "A list of saved states",
          "type": "array",
          "items": {
            "$ref": "#/definitions/State"
          }
        }
      }
    }
  },
  "oneOf": [
    {
      "$ref": "#/definitions/Graph"
    },
    {
      "$ref": "#/definitions/Scaffold"
    },
    {
      "$ref": "#/definitions/Snapshot"
    }
  ]
}